#Git Clone
- name: Git Clone iac Repo
  hosts: all
  tasks:
    - name: Clone a github repository
      shell: |
        cd /tmp
        rm -rf iac-infra
        git clone https://mberthos:<token>@github.com/mberthos/hotmart-idp.git
#Metrics
- name: Setup metrics kubernetes
  hosts: all
  tasks:
    - name: Setup metrics kubernetes
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/k8s/metrics/
        kubectl apply -f eks-metrics.yaml
      register: k8sMetrics
      tags: k8sMetrics
    - debug: msg="{{k8sMetrics.stdout}}"
#Auto Scaler
- name: Setup cluster autoscaller kubernetes
  hosts: all
  tasks:
    - name: Conditional if exists
      shell: aws eks describe-cluster --name mberthos --query "cluster.identity.oidc.issuer" --output text --profile mberthos-terraform --region us-west-2 | wc -l
      register: iamoidc
    - name: Conditional if exists
      shell: "aws iam list-policies --profile mberthos-terraform --region us-west-2 | grep AmazonEKSClusterCaixaAutoscalerPolicyAll | wc -l"
      register: createpolicy
    - name: Conditional if exists
      shell: kubectl get serviceaccount -n kube-system | grep cluster-autoscaler | wc -l
      register: iamserviceaccount
    - name: Setup aws associate-iam-oidc-provide
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos      
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/extras/auto-scaller/
        eksctl utils associate-iam-oidc-provider --cluster mberthos --approve --profile mberthos-terraform --region us-west-2 -y #check if exists before
      when: iamoidc.stdout == "1"
    - name: Setup aws create-policy
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos      
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/extras/auto-scaller/        
        aws iam create-policy --policy-name AmazonEKSClusterCaixaAutoscalerPolicyAll --policy-document file://cluster-autoscaler-policy_all.json --profile mberthos-terraform --region us-west-2 #check if exists before #check if exists before
      when: createpolicy.stdout == "0"
    - name: Setup cluster autoscaller kubernetes
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos      
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/extras/auto-scaller/
        eksctl create iamserviceaccount --name cluster-autoscaler --namespace kube-system --cluster mberthos --attach-policy-arn \"arn:aws:iam::277173910066:policy/AmazonEKSClusterCaixaAutoscalerPolicyAll\" --approve --override-existing-serviceaccounts --profile mberthos-terraform --region us-west-2 #check if exists before
        kubectl apply -f cluster-autoscaler-autodiscover.yaml        
        kubectl apply -f pdb.yaml
      when: iamserviceaccount.stdout == "0"
#Namespaces
- name: Setup Namespaces
  hosts: all
  tasks:
    - name: Setup Namespaces
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/k8s/base/
        kubectl apply -f namespaces.yml
      register: k8sNS
      tags: k8sNS
    - debug: msg="{{k8sNS.stdout}}"

#Helm Setups
#External Secret
- name: Setup External Secrets
  hosts: all
  vars:
    helm_chart_url: "https://charts.external-secrets.io"
  tasks:
    - name: List if exists installed
      shell:  helm list -A | grep external-secrets | wc -l
      register: contents
    - name: Helm install
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
        helm repo add external-secrets https://charts.external-secrets.io
        helm repo update
        helm install external-secrets external-secrets2/external-secrets -n external-secrets --create-namespace
      when: contents.stdout == "0"

#Istio
- name: Setup Istio
  hosts: all
  vars:
    helm_chart_url: "https://istio-release.storage.googleapis.com/charts"
  tasks:
    - name: Add helm repo Istio
      kubernetes.core.helm_repository:
        name: istio
        repo_url: "{{ helm_chart_url }}"
    - name: Install Istio Base
      kubernetes.core.helm:
        name: istio-base
        namespace: istio-system
        chart_ref: istio/base
    - name: Install IstioD
      kubernetes.core.helm:
        name: istiod
        namespace: istio-system
        chart_ref: istio/istiod
#Configs
- name: General Configs pos setups CRDs
  hosts: all
  tasks:
    - name: Namespace
      shell: |
         aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
         cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/k8s/base/
         kubectl apply -f namespaces.yml
    - name: External Secrets
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
        helm install external-secrets external-secrets/external-secrets  -n external-secrets --create-namespace
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/k8s/external-secrets/
        kubectl apply -f secret-store-dev.yml
    - name: Istio
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/k8s/istio/extras/
        kubectl apply -f grafana.yml
        kubectl apply -f kiali.yml
        kubectl apply -f prometheus.yml
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/extras/istio/ingress-nlb/
        #istioctl apply -f istio-nlb-ingress.yaml --set meshConfig.accessLogFile=/dev/stdout --set meshConfig.enableTracing=true --set meshConfig.defaultConfig.tracing.sampling=10 --set meshConfig.defaultConfig.tracing.custom_tags.my_tag_header.header.name=host
    - name: RBAC
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
        cd /tmp/iac-infra/argocd-install/mberthos/pos-setup/k8s/rbac/
        kubectl apply -f clusterrole-dev.yaml
        kubectl apply -f clusterrole-ops.yaml
        kubectl apply -f clusterrolebinding-dev.yaml
        kubectl apply -f clusterrolebinding-ops.yaml
#Setup ArgoCD Server
#Configs.
- name: Setup ArgoCD
  hosts: all
  tasks:
    - name: Conditional if exists
      shell: helm list -A | grep argocd-ha  | wc -l
      register: contents
    - name: ArgoCD Install
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos
        cd /tmp/iac-infra/argocd-install/mberthos/setup/
        helm repo add argo https://argoproj.github.io/argo-helm
        helm install -f ./values.yml -n argocd argocd-ha argo/argo-cd --version 4.9.7
      when: contents.stdout == "0"
    - name: ArgoCD Configs
      shell: |
        aws eks update-kubeconfig --region us-west-2 --name mberthos --profile mberthos        
        cd /tmp/iac-infra/argocd-install/mberthos/setup/
        kubectl apply -f argocd-rbac-cm.yaml
        kubectl apply -f vs-argocd-server.yaml
      when: contents.stdout == "0"

